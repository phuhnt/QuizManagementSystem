@model Model.EF.User

@{
    ViewBag.Title = "Thêm người dùng";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

@section breadcrumb{
    Thêm người dùng
}

@section jsFooter{
    <script>
        $(document).ready(function () {
            $('#btnSelectImage').on('click', function (e) {
                e.preventDefault();
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#txtImage').val(url);
                };
                finder.popup();
            })
        })
    </script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#avatar').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#btnSelectImage").change(function () {
            readURL(this);
        });
    </script>
    <script>
        $(document).ready(function () {
            var classes = $('#ClassID');

            $('#GradeID').change(function () {
                var id = $(this).val();
                $('#ClassID').html(null);

                $.getJSON("/admin/user/FillClass", { gradeId: id }, function (data) {
                    $.each(data, function (i, item) {
                        classes.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            });
        });
    </script>
}

@using (Html.BeginForm("Create", "user", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thông tin tài khoản</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Ảnh đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="avatar" src="~/Data/userdefault.png" alt="avatar" />
                @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @id = "txtImage", @readonly = "readonly" }, id = "txtImage" })
                <input class="btn btn-outline-primary" id="btnSelectImage" type="file" />
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger", @id = "errImage" })
            </div>

            <div class="form-group">
                @Html.Label("Tên tài khoản", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Nhập lại mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPasswordHash, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Loại tài khoản", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GroupID, null, "--- Chọn ---", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Status", new List<SelectListItem>
                   {
                       new SelectListItem{ Text = "Kích hoạt", Value = "True"},
                       new SelectListItem{ Text = "Khóa", Value = "False"}
                   }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <h4>Thông tin người dùng</h4>
            <hr />
            <div class="form-group">
                @Html.Label("Họ và tên", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Ngày sinh (MM/dd/yyyy)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DayOfBirth, new { htmlAttributes = new { @class = "form-control", @id = "datepicker", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.DayOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Giới tính", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Sex, "Nam", new { htmlAttributes = new { @class = "form-control" } }) Nam
                    @Html.RadioButtonFor(model => model.Sex, "Nữ", new { htmlAttributes = new { @class = "form-control" } }) Nữ
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Địa chỉ email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Khối", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GradeID", null, "---Chọn----", htmlAttributes: new { @class = "form-control", @id = "GradeID" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Lớp", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ClassID, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "---Chọn----", htmlAttributes: new { @class = "form-control", @id = "ClassID" })
                    @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Tạo" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}
<div>
    <a class="btn btn-outline-primary" href="/admin/user"></a>
</div>

