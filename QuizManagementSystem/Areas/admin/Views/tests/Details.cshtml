@using Model.DAO;
@using QuizManagementSystem.Common;
@using Model.EF;

@model Model.EF.Test

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

@section breadcrumb{
    Chi tiết đề thi
}

@section linkHeader{
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link href="~/Assets/Admin/vendor/datatables/dataTables.bootstrap4.css" rel="stylesheet" type="text/css" />
}


<div>
    <a class="btn btn-danger right pull-right" style="margin-bottom: 10px" href="/admin/tests/delete/@Model.Id">Xóa đề thi</a>
    <a class="btn btn-warning right pull-right" style="margin-bottom: 10px; margin-right: 10px" href="/admin/tests/edit/@Model.Id">Chỉnh sửa đề thi</a>
    <a class="btn btn-primary right pull-right" href="/admin/tests/create" style="margin-bottom: 10px; margin-right: 10px">Thêm đề thi</a>
</div>

<div>
    <span class="badge badge-primary" style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 1rem; margin-top: 24px">Thông tin chung</span>
    <table class="table table-bordered table-dark">
        <tbody>
            <tr>
                <th scope="row" width="50%">Kỳ thi</th>
                <td width="50%">
                    @Html.DisplayFor(model => model.Exam.Titile)
                </td>
            </tr>
            <tr>
                <th scope="row" width="50%">Mã đề</th>
                <td width="50%">
                    @Html.DisplayFor(model => model.CodeTest)
                </td>
            </tr>
            <tr>
                <th scope="row">Môn thi</th>
                <td>
                    @Html.DisplayFor(model => model.Exam.Subject.Name)
                </td>
            </tr>
            <tr>
                <th scope="row">Ngày thi</th>
                <td>
                    @Html.DisplayFor(model => model.Exam.FromDate)
                </td>
            </tr>
            <tr>
                <th scope="row">Số câu hỏi</th>
                <td>
                    @Html.DisplayFor(model => model.NumberOfQuestions)
                </td>
            </tr>
            <tr>
                <th scope="row">Trạng thái</th>
                <td>
                    @{
                        if (Model.Status == null)
                        {
                            <p class="badge badge-pill badge-info">Chưa thiết lập</p>

                        }
                        else if (Model.Status == true)
                        {
                            <p class="badge badge-pill badge-success">Đã mở</p>
                        }
                        else
                        {
                            <p class="badge badge-pill badge-danger">Đã đóng</p>
                        }
                    }
                </td>
            </tr>
        </tbody>
    </table>
    <span class="badge badge-primary" style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 1rem; margin-top: 24px">Nội dung đề thi (Đề: @Model.CodeTest)</span>
    <table class="table table-bordered">
        <tbody>
            <tr>
                <td>
                    @{
                        var quizList = new TestDAO().GetAllQuiz(Model.Id);

                        List<Question> quizListIndex = new List<Question>();

                        if (Model.MixQuiz == true)
                        {
                            int _min = 1000;
                            for (int p = 0; p < quizList.Count; p++)
                            {
                                string _pattern = "<" + Model.CodeTest.ToString() + ">";
                                int startIndex = quizList[p].MixQuiz.IndexOf(_pattern);
                                _pattern = "</" + _pattern.Substring(1);
                                int endIndex = quizList[p].MixQuiz.IndexOf(_pattern);

                                var _mixQuizCurr = quizList[p].MixQuiz.Substring(startIndex, endIndex + _pattern.Length - startIndex);
                                var indexCurr = int.Parse(Encode.StripCodeTestTag(_mixQuizCurr));

                                if (indexCurr == 0)
                                {
                                    _min = 0;
                                    quizListIndex.Add(quizList[p]);
                                    break;
                                }
                            }
                            int count = 1;
                            do
                            {
                                for (int t = 0; t < quizList.Count; t++)
                                {
                                    string _pattern = "<" + Model.CodeTest.ToString() + ">";
                                    int startIndex = quizList[t].MixQuiz.IndexOf(_pattern);
                                    _pattern = "</" + _pattern.Substring(1);
                                    int endIndex = quizList[t].MixQuiz.IndexOf(_pattern);

                                    var _mixQuiz = quizList[t].MixQuiz.Substring(startIndex, endIndex + _pattern.Length - startIndex);
                                    var index = int.Parse(Encode.StripCodeTestTag(_mixQuiz));

                                    if (index == (_min + 1))
                                    {
                                        count++;
                                        _min = index;
                                        quizListIndex.Add(quizList[t]);
                                    }
                                }
                            } while (count < quizList.Count);
                        }
                        else
                        {
                            quizListIndex = quizList.ToList();
                        }

                        for (int k = 0; k < quizListIndex.Count; k++)
                        {
                            var c = k + 1;
                            @Html.Raw("<strong>Câu " + c + "</strong>: " + quizListIndex[k].ContentQuestion);

                            // Đáp án
                            if (Model.MixAnswer == true)
                            {
                                string _pattern = "<" + Model.CodeTest.ToString() + ">";
                                int startIndex = quizListIndex[k].MixAnswer.IndexOf(_pattern);
                                _pattern = "</" + _pattern.Substring(1);
                                int endIndex = quizListIndex[k].MixAnswer.IndexOf(_pattern);

                                var _mixAnswer = quizListIndex[k].MixAnswer.Substring(startIndex, endIndex + _pattern.Length - startIndex);
                                @Html.Raw(Encode.StripCodeTestTag(_mixAnswer));
                            }
                            else
                            {
                                @Html.Raw(quizListIndex[k].AnswerText);
                            }
                            <br />
                        }

                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>
<hr />
<a class="btn btn-info" href="/admin/tests">Quay lại</a>