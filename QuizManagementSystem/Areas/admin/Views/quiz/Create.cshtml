@model Model.EF.Question

@{
    ViewBag.Title = "Thêm câu hỏi | Quiz Management System";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

@section breadcrumb{
    Thêm câu hỏi
}


@section jsFooter{
    <script type="text/javascript">
        $(function () {
            $('.datepicker').datepicker();
        });
    </script>

    <script>
        $(document).ready(function () {
            var grades = $('#GradeID');

            $('#SchoolYearID').change(function () {
                var id = $(this).val();
                $('#GradeID').html(null);
                $.getJSON("/admin/tests/FillGrades", { schoolyearId: id }, function (data) {
                    grades.append($('<option></option>').val("0").text(""));
                    $.each(data, function (i, item) {
                        grades.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            });
        });


        $(document).ready(function () {
            var subj = $('#SubjectsID');

            $('#GradeID').change(function () {
                var id = $(this).val();
                $('#SubjectsID').html(null);

                $.getJSON("/admin/quiz/FillSubjects", { classId: id }, function (data) {
                    $.each(data, function (i, item) {
                        subj.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            });
        });

        CKFinder.setupCKEditor(null, 'Assets/Admin/js/plugins/ckfinder/');
        CKEDITOR.replace('txtContentQuestion', {
            customConfig: '/Assets/Admin/js/plugins/ckeditor/config.js',
        });
        //$(document).ready(function () {
        //    for (var i = 0; i < 4; i++) {
        //        CKEDITOR.replace('txtAnswer[' + i + ']', {
        //            customConfig: '/Assets/Admin/js/plugins/ckeditor/config.js',
        //        });
        //    }
        //});
    </script>
    <script>
        $(document).ready(function () {
            var answers = $('#answerChoice');

            $('#answerNum').change(function () {
                var i = $(this).val();
                $('#answerChoice').html(null);

                for (var j = 0; j < i; j++) {
                    var Alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];
                    answers.append('<input type= "checkbox" name= "AnswerKey[]" id= "AnswerKey[]" value= "'+j+'" title= "Đáp án đúng" />'                      
                        + '<label class = "control-label col-md-2"><strong>Đáp án ' + Alphabet[j] + '</strong ></label>'
                        + '<div class="input-group">'                                               
                        + '<div class="col-md-10" >'
                        + '<textarea name= "AnswerList[' + j + ']" class="form-control" id= "AnswerList[' + j + ']" /></textarea>'
                        //+ '<div class="input-group-append" data-toggle="tooltip" data-placement="top" title="" data-original-title="Đáp án đúng">'
                        //+ '<div class="input-group-text">'
                        //+ '<input type="checkbox" name="AnswerKey[' + j + ']" id="AnswerKey[' + j +']" value="1" title="Đáp án đúng" />'
                        //+ '</div>'
                        //+ '</div>'
                        + '</div> '
                        + '</div></br>');
                    
                    CKEDITOR.replace('AnswerList[' + j + ']', {                   
                        customConfig: '/Assets/Admin/js/plugins/ckeditor/config.js'
                    });
                }
            });
        });

        //$(document).ready(function () {
        //    $('#btnSubmit').click(function (e) {
        //        var i = $('#answerNum').val();
        //        var ckeData = "";
        //        for (var j = 0; j < i; j++) {

        //            ckeData += CKEDITOR.instances.AnswerList[j].getData();
        //        }
        //        $.post("/admin/quiz/Create", { Answers: "Hihihihihi" }, function (result) {
        //            console.log(result);
        //        });

        //    });
        //});
    </script>

}

@using (Html.BeginForm("Create", "quiz", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Thêm câu hỏi</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Năm học", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SchoolYearID", null, "--- Chọn ---", htmlAttributes: new { @class = "form-control", @id = "SchoolYearID" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Khối lớp", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GradeID", null, "--- Chọn ---", htmlAttributes: new { @class = "form-control", @id = "GradeID" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Môn học", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubjectsID, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "--- Chọn ---", htmlAttributes: new { @class = "form-control", @id = "SubjectsID" })
                @Html.ValidationMessageFor(model => model.SubjectsID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Loại câu hỏi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Thể loại câu hỏi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.KindID, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.KindID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cấp độ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LevelID, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nội dung câu hỏi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ContentQuestion, new { htmlAttributes = new { @class = "form-control", @id = "txtContentQuestion" }, id = "txtContentQuestion" })
                @Html.ValidationMessageFor(model => model.ContentQuestion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Số đáp án lựa chọn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AnswerChoiceNum", null, "--- Chọn số đáp án ----", new { @class = "form-control", @id = "answerNum" })
            </div>
        </div>

        <div class="form-group" id="answerChoice">

        </div>

        <div class="form-group">
            @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new List<SelectListItem>
                                       {
                                           new SelectListItem{ Text = "Hoạt động", Value = "True"},
                                           new SelectListItem{ Text = "Không hoạt động", Value = "False"}
                                       }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo" class="btn btn-primary pull-right" style="width: 100px" id="btnSubmit" />
                <a class="btn btn-info pull-left" href="/admin/quiz">Quay lại</a>
            </div>
        </div>
    </div>
}
<br />
<br />
<br />

